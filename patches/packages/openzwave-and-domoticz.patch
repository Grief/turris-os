From b25b5d16431f468fb1c514628fc7b2780df8c7ac Mon Sep 17 00:00:00 2001
From: Michal Hrusecky <michal.hrusecky@nic.cz>
Date: Fri, 22 Jun 2018 11:12:47 +0200
Subject: [PATCH] openzwave and domoticz: Add upstream packages from packages
 feed

---
 utils/domoticz/Makefile                       | 133 ++++++++++
 utils/domoticz/files/domoticz.config          |  29 ++
 utils/domoticz/files/domoticz.hotplug         |  44 +++
 utils/domoticz/files/domoticz.init            |  70 +++++
 utils/domoticz/patches/101_onkyo_pr2386.patch | 250 ++++++++++++++++++
 utils/openzwave/Makefile                      |  98 +++++++
 ...x-compilation-against-musl-libc-1127.patch |  28 ++
 utils/openzwave/patches/900_fix-build.patch   |  29 ++
 .../patches/901_no-hidcontroller.patch        |  89 +++++++
 utils/openzwave/patches/902_no-udev.patch     |  24 ++
 .../patches/904-fix-lib-include-path.patch    |  15 ++
 11 files changed, 809 insertions(+)
 create mode 100644 utils/domoticz/Makefile
 create mode 100644 utils/domoticz/files/domoticz.config
 create mode 100644 utils/domoticz/files/domoticz.hotplug
 create mode 100644 utils/domoticz/files/domoticz.init
 create mode 100644 utils/domoticz/patches/101_onkyo_pr2386.patch
 create mode 100644 utils/openzwave/Makefile
 create mode 100644 utils/openzwave/patches/001-unix-fix-compilation-against-musl-libc-1127.patch
 create mode 100644 utils/openzwave/patches/900_fix-build.patch
 create mode 100644 utils/openzwave/patches/901_no-hidcontroller.patch
 create mode 100644 utils/openzwave/patches/902_no-udev.patch
 create mode 100644 utils/openzwave/patches/904-fix-lib-include-path.patch

diff --git a/utils/domoticz/Makefile b/utils/domoticz/Makefile
new file mode 100644
index 00000000..8fc93e5a
--- /dev/null
+++ b/utils/domoticz/Makefile
@@ -0,0 +1,134 @@
+#
+# Copyright (C) 2016 - 2017  Stijn Tintel <stijn@linux-ipv6.be>
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=domoticz
+PKG_VERSION_MAJOR:=3
+PKG_VERSION_PATCH:=8153
+PKG_COMMIT:=
+PKG_VERSION:=$(PKG_VERSION_MAJOR).$(PKG_VERSION_PATCH)
+PKG_RELEASE:=1
+
+ifeq ($(PKG_COMMIT),)
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
+PKG_SOURCE_URL:=https://github.com/domoticz/domoticz/archive/$(PKG_VERSION)/$(PKG_SOURCE)
+else
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_COMMIT).tar.gz
+PKG_SOURCE_URL:=https://github.com/domoticz/domoticz/archive/$(PKG_COMMIT)/$(PKG_SOURCE)
+PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_NAME)-$(PKG_COMMIT)
+endif
+PKG_MD5SUM:=ad7b1d0491cd17e54bbe7368bcfd5170
+
+PKG_LICENSE:=GPL-3.0
+PKG_LICENSE_FILES:=License.txt
+
+PKG_BUILD_PARALLEL:=1
+PKG_USE_MIPS16:=0
+
+CMAKE_INSTALL:=1
+
+include $(INCLUDE_DIR)/package.mk
+include $(INCLUDE_DIR)/cmake.mk
+
+define Package/domoticz
+  SECTION:=utils
+  CATEGORY:=Utilities
+  TITLE:=Open Source Home Automation System
+  URL:=http://domoticz.com/
+  MAINTAINER:=Stijn Tintel <stijn@linux-ipv6.be>
+  USERID:=domoticz=6144:domoticz=6144
+  DEPENDS:= \
+	+boost \
+	+boost-date_time \
+	+boost-system \
+	+boost-thread \
+	+libcurl \
+	+libmosquittopp \
+	+libopenssl \
+	+libopenzwave \
+	+libsqlite3 \
+	+libstdcpp \
+	+libusb-compat \
+	+udev \
+	+zlib
+endef
+
+define Package/domoticz/description
+  Domoticz is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device.
+endef
+
+CMAKE_OPTIONS += \
+	-DCMAKE_BUILD_TYPE=Release \
+	-DUSE_BUILTIN_MQTT=no \
+	-DUSE_BUILTIN_SQLITE=no \
+	-DUSE_STATIC_BOOST=no \
+	-DUSE_STATIC_LIBSTDCXX=no \
+	-DUSE_STATIC_OPENZWAVE=no \
+	-DUSE_OPENSSL_STATIC=no \
+	-DUSE_PYTHON=no \
+	-DWITH_LIBUSB=no
+
+TARGET_CFLAGS+=-flto
+TARGET_CXXFLAGS+=-DWITH_GPIO -flto
+
+define Build/Prepare
+	$(call Build/Prepare/Default)
+	# Fix APPVERSION/APPDATE since we don't build from a git tree
+	sed -i 's/#define APPVERSION.*/#define APPVERSION $(PKG_VERSION_PATCH)/' \
+		 $(PKG_BUILD_DIR)/appversion.default
+	COMMITDATE=`tar tvfz $(DL_DIR)/$(PKG_SOURCE) --full-time | sed 's/.* \(20..-..-.. ..:..:..\) domoticz-.*/\1/;q'`; \
+	COMMITTS=`date --date="$$$${COMMITDATE}" +%s`; \
+	sed -i "s/#define APPDATE.*/#define APPDATE $$$${COMMITTS}/" $(PKG_BUILD_DIR)/appversion.default
+ifneq ($(PKG_COMMIT),)
+	sed -i "s/#define APPHASH.*/#define APPHASH \"$(shell echo $(PKG_COMMIT) | cut -c1-8)\"/" $(PKG_BUILD_DIR)/appversion.default
+endif
+	# Remove unwanted scripts
+	cd $(PKG_BUILD_DIR)/scripts && rm -rf \
+		buienradar_rain_example.pl \
+		_domoticz_main* \
+		download_update.sh \
+		dzVents/{.gitignore,documentation,examples,generated_scripts,data} \
+		dzVents/runtime/{integration-tests,misc/smoothing.xlsx,tests} \
+		logrotate/ \
+		lua_parsers/example* \
+		lua/*demo.lua \
+		python/ \
+		readme.txt \
+		restart_domoticz \
+		templates/All.Python \
+		update_domoticz \
+		domoticz.conf
+	# Remove *.md
+	cd $(PKG_BUILD_DIR) && $(FIND) -name '*.md' -delete
+endef
+
+define Package/domoticz/install
+	$(INSTALL_DIR) $(1)/etc/config $(1)/etc/hotplug.d/tty $(1)/etc/init.d $(1)/etc/domoticz
+	$(INSTALL_BIN) ./files/domoticz.hotplug $(1)/etc/hotplug.d/tty/domoticz
+	$(INSTALL_BIN) ./files/domoticz.init $(1)/etc/init.d/domoticz
+	$(INSTALL_CONF) ./files/domoticz.config $(1)/etc/config/domoticz
+	$(INSTALL_DIR) $(1)/usr/share/domoticz $(1)/usr/bin
+	$(CP) $(PKG_INSTALL_DIR)/usr/Config $(1)/usr/share/domoticz/Config
+	$(CP) $(PKG_INSTALL_DIR)/usr/scripts $(1)/etc/domoticz/scripts
+	ln -sf /var/lib/domoticz/dzVents/generated_scripts $(1)/etc/domoticz/scripts/dzVents
+	ln -sf /var/lib/domoticz/dzVents/data $(1)/etc/domoticz/scripts/dzVents
+	$(CP) $(PKG_INSTALL_DIR)/usr/www $(1)/usr/share/domoticz/
+	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/domoticz $(1)/usr/bin/domoticz
+	# compress static web content
+	find $(1)/usr/share/domoticz/www -name "*.css" -exec gzip -9 {} \;
+	find $(1)/usr/share/domoticz/www -name "*.js" -exec gzip -9 {} \;
+	find $(1)/usr/share/domoticz/www -name "*.html" -exec sh -c 'grep -q "<\!--#embed" {} || gzip -9 {}' \;
+endef
+
+define Package/domoticz/conffiles
+/etc/config/domoticz
+/var/lib/domoticz/
+/etc/domoticz/
+endef
+
+$(eval $(call BuildPackage,domoticz))
diff --git a/utils/domoticz/files/domoticz.config b/utils/domoticz/files/domoticz.config
new file mode 100644
index 00000000..870701c0
--- /dev/null
+++ b/utils/domoticz/files/domoticz.config
@@ -0,0 +1,29 @@
+config domoticz
+	option disabled '1'
+	option loglevel '1'
+	option syslog 'daemon'
+	# option sslcert '/path/to/ssl.crt'
+	# option sslkey '/path/to/ssl.key'
+	# option sslpass 'passphrase'
+	# option ssldhparam '/path/to/dhparam.pem'
+	option sslwww '0'
+	# CAUTION - by default, /var is not persistent accross reboots
+	# Don't forget the trailing / - domoticz requires it
+	option userdata '/var/lib/domoticz/'
+
+#config device
+#	option product '658/200/0'
+#	option symlink 'ttyACM-aeotec-zstick-g5'
+
+#config device
+#	option serial '526359'
+#	option symlink 'ttyUSB-serial'
+
+#config device
+#	option usbif '2-1:1.0'
+#	option symlink 'ttyUSB-port1'
+
+#config device
+#	option product '67b/2303/202'
+#	option usbif '2-2:1.0'
+#	option symlink 'ttyUSB-port2'
diff --git a/utils/domoticz/files/domoticz.hotplug b/utils/domoticz/files/domoticz.hotplug
new file mode 100644
index 00000000..3cd8651c
--- /dev/null
+++ b/utils/domoticz/files/domoticz.hotplug
@@ -0,0 +1,44 @@
+#!/bin/sh
+
+. /lib/functions.sh
+
+[ "$SUBSYSTEM" = "tty" ] || exit 0
+
+add() {
+	local cfg="$1"
+	local product serial symlink usbif
+
+	[ -c "/dev/$DEVICENAME" ] || return
+
+	config_get product "$cfg" product
+	config_get serial "$cfg" serial
+	config_get symlink "$cfg" symlink
+	config_get usbif "$cfg" usbif
+
+	[ -z "$product" -a -z "$serial" -a -z "$usbif" ] && return
+
+	. "/sys/$DEVPATH/device/../uevent"
+	SERIAL="$(cat /sys/$DEVPATH/device/../../serial)" 2>/dev/null
+	USBIF="$(echo $DEVPATH | awk -F/ 'BEGIN {i=3}; /ACM/ {i=2}; END {print $(NF-i)}')"
+
+	[ -n "$product" -a "$product" != "$PRODUCT" ] && return
+	[ -n "$serial" -a "$serial" != "$SERIAL" ] && return
+	[ -n "$usbif" -a "$usbif" != "$USBIF" ] && return
+
+	chgrp domoticz "/dev/$DEVICENAME"
+	chmod g+rw "/dev/$DEVICENAME"
+
+	[ -n "$symlink" ] && ln -sf "/dev/$DEVICENAME" "/dev/$symlink"
+}
+
+remove() {
+	local cfg="$1"
+	local symlink
+
+	config_get symlink "$cfg" symlink
+
+	[ "/dev/$DEVICENAME" = "$(readlink /dev/$symlink)" ] && rm "/dev/$symlink"
+}
+
+config_load "domoticz"
+config_foreach "$ACTION" device
diff --git a/utils/domoticz/files/domoticz.init b/utils/domoticz/files/domoticz.init
new file mode 100644
index 00000000..89aaeae0
--- /dev/null
+++ b/utils/domoticz/files/domoticz.init
@@ -0,0 +1,70 @@
+#!/bin/sh /etc/rc.common
+
+START=99
+USE_PROCD=1
+PROG=/usr/bin/domoticz
+PIDFILE=/var/run/domoticz.pid
+
+start_domoticz() {
+	local section="$1"
+	local loglevel sslcert sslpass sslwww syslog userdata
+
+	config_get loglevel "$section" "loglevel"
+	config_get sslcert "$section" "sslcert"
+	config_get sslkey "$section" "sslkey"
+	config_get sslpass "$section" "sslpass"
+	config_get ssldhparam "$section" "ssldhparam"
+	config_get sslwww "$section" "sslwww"
+	config_get syslog "$section" "syslog"
+	config_get userdata "$section" "userdata" userdata /var/lib/domoticz
+
+	[ -n "$loglevel" ] && procd_append_param command -loglevel "$loglevel"
+	[ -n "$syslog" ] && procd_append_param command -syslog "$syslog"
+
+	[ -d "${userdata}" ] || {
+		mkdir -p "${userdata}"
+		chmod 0770 "$userdata"
+		chown domoticz:domoticz "$userdata"
+	}
+
+	# By default, ${userdata}/scripts is a symlink to /etc/domoticz/scripts
+	# and the two dzVents directories under there which Domoticz will actually
+	# write to at runtime are symlinked back to /var/lib again.
+	[ -d "${userdata}/scripts" ] || ln -sf /etc/domoticz/scripts "${userdata}/scripts"
+	for DIR in data generated_scripts; do
+		[ -d /var/lib/domoticz/dzVents/$DIR ] || {
+			mkdir -p /var/lib/domoticz/dzVents/$DIR
+			chown domoticz.domoticz /var/lib/domoticz/dzVents/$DIR
+		}
+	done
+	procd_append_param command -userdata "$userdata"
+
+	[ -n "$sslcert" -a "${sslwww:-0}" -gt 0 ] && {
+		procd_append_param command -sslcert "$sslcert"
+		procd_append_param command -sslwww "$sslwww"
+		[ -n "$sslkey" ] && procd_append_param command -sslkey "$sslkey"
+		[ -n "$sslpass" ] && procd_append_param command -sslpass "$sslpass"
+		[ -n "$ssldhparam" ] && procd_append_param command -ssldhparam "$ssldhparam"
+	} || procd_append_param command -sslwww 0
+}
+
+start_service() {
+	procd_open_instance
+
+	procd_set_param command "$PROG"
+	procd_append_param command -noupdates
+	procd_append_param command -approot /usr/share/domoticz/
+
+	config_load "domoticz"
+	config_get_bool disabled "$section" "disabled" 0
+	[ "$disabled" -gt 0 ] && return 1
+	config_foreach start_domoticz domoticz
+
+	procd_set_param pidfile "$PIDFILE"
+	procd_set_param respawn
+	procd_set_param stdout 0
+	procd_set_param term_timeout 10
+	procd_set_param user "domoticz"
+
+	procd_close_instance
+}
diff --git a/utils/openzwave/Makefile b/utils/openzwave/Makefile
new file mode 100644
index 00000000..da63dfb7
--- /dev/null
+++ b/utils/openzwave/Makefile
@@ -0,0 +1,98 @@
+#
+# Copyright (C) 2017  Hauke Mehrtens <hauke@hauke-m.de>
+# Copyright (C) 2016 - 2017  Stijn Tintel <stijn@linux-ipv6.be>
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=openzwave
+PKG_REV:=164
+PKG_VERSION:=1.4.$(PKG_REV)
+PKG_RELEASE:=2
+
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
+PKG_SOURCE_URL:=http://old.openzwave.com/downloads
+PKG_MD5SUM:=4ecf39787aaf278c203764069b581dbc26094ce57cafeab4a0c1f012d2c0ac69
+PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_NAME)-$(PKG_VERSION)
+PKG_INSTALL:=1
+
+include $(INCLUDE_DIR)/package.mk
+
+define Package/openzwave/default
+  URL:=http://openzwave.com
+  MAINTAINER:=Stijn Tintel <stijn@linux-ipv6.be>
+  DEPENDS:=+libpthread +libstdcpp
+endef
+
+define Package/openzwave/description
+	Open-ZWave is a library that interfaces with selected Z-Wave PC controllers
+endef
+
+define Package/libopenzwave
+$(call Package/openzwave/default)
+  SECTION:=libs
+  CATEGORY:=Libraries
+  TITLE:=Open-ZWave Library
+endef
+
+define Package/openzwave
+$(call Package/openzwave/default)
+  SECTION:=utils
+  CATEGORY:=Utilities
+  TITLE:=Open-ZWave MinOZW test utility
+  DEPENDS:=+libopenzwave +openzwave-config
+endef
+
+define Package/openzwave-config
+$(call Package/openzwave/default)
+  SECTION:=utils
+  CATEGORY:=Utilities
+  TITLE:=Open-ZWave Device Configs
+endef
+
+TARGET_CPPFLAGS+=-Wno-format -Wno-format-security
+
+MAKE_FLAGS += \
+	LD="$(TARGET_CROSS)g++" \
+	LIBDIR="$(PKG_BUILD_DIR)" \
+	PREFIX=$(CONFIGURE_PREFIX) \
+	instlibdir=/usr/lib \
+	pkgconfigdir=/usr/lib/pkgconfig \
+	sysconfdir=/etc/openzwave
+
+define Build/Prepare
+	$(call Build/Prepare/Default)
+	rm $(PKG_BUILD_DIR)/cpp/src/platform/HidController.*
+	sed -i -e '/hidapi/d;/HidController/d' $(PKG_BUILD_DIR)/distfiles.mk
+endef
+
+define Package/libopenzwave/install
+	$(INSTALL_DIR) $(1)/usr/lib
+	$(CP) $(PKG_INSTALL_DIR)/usr/lib/libopenzwave.so* $(1)/usr/lib/
+endef
+
+define Package/openzwave/install
+	$(INSTALL_DIR) $(1)/usr/bin
+	$(CP) $(PKG_INSTALL_DIR)/usr/bin/MinOZW $(1)/usr/bin/
+endef
+
+define Package/openzwave-config/install
+	$(INSTALL_DIR) $(1)/etc/
+	$(CP) $(PKG_INSTALL_DIR)/etc/openzwave $(1)/etc/
+endef
+
+define Build/InstallDev
+	$(INSTALL_DIR) $(1)/usr/include
+	$(CP) $(PKG_INSTALL_DIR)/usr/include/openzwave $(1)/usr/include/
+	$(INSTALL_DIR) $(1)/usr/lib
+	$(CP) $(PKG_INSTALL_DIR)/usr/lib/libopenzwave.* $(1)/usr/lib/
+	$(INSTALL_DIR) $(1)/usr/lib/pkgconfig
+	$(CP) $(PKG_INSTALL_DIR)/usr/lib/pkgconfig/libopenzwave.pc $(1)/usr/lib/pkgconfig/
+endef
+
+$(eval $(call BuildPackage,libopenzwave))
+$(eval $(call BuildPackage,openzwave))
+$(eval $(call BuildPackage,openzwave-config))
diff --git a/utils/openzwave/patches/001-unix-fix-compilation-against-musl-libc-1127.patch b/utils/openzwave/patches/001-unix-fix-compilation-against-musl-libc-1127.patch
new file mode 100644
index 00000000..3001667c
--- /dev/null
+++ b/utils/openzwave/patches/001-unix-fix-compilation-against-musl-libc-1127.patch
@@ -0,0 +1,28 @@
+From eab45f0959ccb1deb662c6f8c036651088e2e8d6 Mon Sep 17 00:00:00 2001
+From: Stijn Tintel <stijn@linux-ipv6.be>
+Date: Fri, 17 Feb 2017 05:42:25 +0100
+Subject: [PATCH] unix: fix compilation against musl libc (#1127)
+
+POSIX.1-2001 requires sys/select.h for select() and friends.
+Compile-tested on glibc and musl, runtime tested on musl.
+
+Signed-off-by: Stijn Tintel <stijn@linux-ipv6.be>
+---
+ cpp/src/platform/unix/SerialControllerImpl.cpp | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/cpp/src/platform/unix/SerialControllerImpl.cpp b/cpp/src/platform/unix/SerialControllerImpl.cpp
+index d95f848..b52b74f 100644
+--- a/cpp/src/platform/unix/SerialControllerImpl.cpp
++++ b/cpp/src/platform/unix/SerialControllerImpl.cpp
+@@ -25,6 +25,7 @@
+ //	along with OpenZWave.  If not, see <http://www.gnu.org/licenses/>.
+ //
+ //-----------------------------------------------------------------------------
++#include <sys/select.h>
+ #include <unistd.h>
+ #include <pthread.h>
+ #include "Defs.h"
+-- 
+2.10.2
+
diff --git a/utils/openzwave/patches/900_fix-build.patch b/utils/openzwave/patches/900_fix-build.patch
new file mode 100644
index 00000000..1081c980
--- /dev/null
+++ b/utils/openzwave/patches/900_fix-build.patch
@@ -0,0 +1,29 @@
+--- a/cpp/build/Makefile
++++ b/cpp/build/Makefile
+@@ -15,7 +15,7 @@
+ # what flags we will use for compiling in debug mode
+ DEBUG_CFLAGS    := -Wall -Wno-unknown-pragmas -Wno-inline -Wno-format -Werror -Wno-error=sequence-point -Wno-sequence-point -ggdb -DDEBUG -fPIC  -DSYSCONFDIR="\"$(PREFIX)/etc/openzwave/\""
+ # what flags we will use for compiling in release mode
+-RELEASE_CFLAGS  := -Wall -Wno-unknown-pragmas -Werror -Wno-format -Wno-error=sequence-point -Wno-sequence-point -O3 -DNDEBUG -fPIC  -DSYSCONFDIR="\"$(PREFIX)/etc/openzwave/\""
++RELEASE_CFLAGS  := -Wall -Wno-unknown-pragmas -Wno-error=sequence-point -Wno-sequence-point -DNDEBUG -fPIC  -DSYSCONFDIR="\"/etc/openzwave/\""
+ #what flags we will use for linking in debug mode
+ DEBUG_LDFLAGS	:= -g
+ 
+@@ -139,7 +139,7 @@ $(LIBDIR)/libopenzwave.a:	$(patsubst %.c
+ 			$(patsubst %.cpp,$(OBJDIR)/%.o,$(indep)) \
+ 			$(OBJDIR)/vers.o
+ 	@echo "Linking Static Library"
+-	@$(AR) $@ $+
++	@$(AR) q $@ $+
+ 	@$(RANLIB) $@
+ 
+ $(LIBDIR)/$(SHARED_LIB_NAME):	$(patsubst %.cpp,$(OBJDIR)/%.o,$(tinyxml)) \
+@@ -161,7 +161,7 @@ $(top_builddir)/libopenzwave.pc: $(top_s
+ 		-e 's|[@]exec_prefix@|$(PREFIX)/bin|g' \
+ 		-e 's|[@]libdir@|$(instlibdir)|g' \
+ 		-e 's|[@]includedir@|$(PREFIX)/include/openzwave/|g' \
+-                -e 's|[@]sysconfdir@|$(PREFIX)/etc/openzwave/|g' \
++                -e 's|[@]sysconfdir@|/etc/openzwave/|g' \
+                 -e 's|[@]gitversion@|$(GITVERSION)|g' \
+                 -e 's|[@]docdir@|$(docdir)/|g' \
+ 		-e 's|[@]VERSION@|$(VERSION)|g' \
diff --git a/utils/openzwave/patches/901_no-hidcontroller.patch b/utils/openzwave/patches/901_no-hidcontroller.patch
new file mode 100644
index 00000000..dfacbf03
--- /dev/null
+++ b/utils/openzwave/patches/901_no-hidcontroller.patch
@@ -0,0 +1,89 @@
+--- a/cpp/src/Driver.cpp
++++ b/cpp/src/Driver.cpp
+@@ -37,11 +37,6 @@
+ #include "platform/Event.h"
+ #include "platform/Mutex.h"
+ #include "platform/SerialController.h"
+-#ifdef WINRT
+-#include "platform/winRT/HidControllerWinRT.h"
+-#else
+-#include "platform/HidController.h"
+-#endif
+ #include "platform/Thread.h"
+ #include "platform/Log.h"
+ #include "platform/TimeStamp.h"
+@@ -223,14 +218,7 @@ m_nonceReportSentAttempt( 0 )
+ 
+ 	initNetworkKeys(false);
+ 
+-	if( ControllerInterface_Hid == _interface )
+-	{
+-		m_controller = new HidController();
+-	}
+-	else
+-	{
+-		m_controller = new SerialController();
+-	}
++	m_controller = new SerialController();
+ 	m_controller->SetSignalThreshold( 1 );
+ 
+ 	Options::Get()->GetOptionAsBool( "NotifyTransactions", &m_notifytransactions );
+--- a/cpp/build/Makefile
++++ b/cpp/build/Makefile
+@@ -66,16 +66,7 @@ CFLAGS  += $(CPPFLAGS)
+ #where to put the temporary library
+ LIBDIR	?= $(top_builddir)
+ 
+-INCLUDES	:= -I $(top_srcdir)/cpp/src -I $(top_srcdir)/cpp/tinyxml/ -I $(top_srcdir)/cpp/hidapi/hidapi/
+-
+-ifeq ($(UNAME),Darwin)
+-SOURCES_HIDAPI =$(top_srcdir)/cpp/hidapi/mac
+-else ifeq ($(UNAME),FreeBSD)
+-SOURCES_HIDAPI =$(top_srcdir)/cpp/hidapi/libusb
+-else
+-SOURCES_HIDAPI =$(top_srcdir)/cpp/hidapi/linux
+-endif
+-
++INCLUDES	:= -I $(top_srcdir)/cpp/src -I $(top_srcdir)/cpp/tinyxml/
+ 
+ SOURCES		:= $(top_srcdir)/cpp/src $(top_srcdir)/cpp/src/command_classes $(top_srcdir)/cpp/tinyxml \
+ 	$(top_srcdir)/cpp/src/value_classes $(top_srcdir)/cpp/src/platform $(top_srcdir)/cpp/src/platform/unix $(SOURCES_HIDAPI) $(top_srcdir)/cpp/src/aes/
+@@ -85,14 +76,6 @@ VPATH = $(top_srcdir)/cpp/src:$(top_srcd
+ 
+ tinyxml := $(notdir $(wildcard $(top_srcdir)/cpp/tinyxml/*.cpp))
+ 
+-ifeq ($(UNAME),Darwin)
+-hidapi := $(notdir $(wildcard $(top_srcdir)/cpp/hidapi/mac/*.c))
+-else ifeq ($(UNAME),FreeBSD)
+-hidapi := $(notdir $(wildcard $(top_srcdir)/cpp/hidapi/libusb/*.c))
+-else
+-hidapi := $(notdir $(wildcard $(top_srcdir)/cpp/hidapi/linux/*.c)) # we do not want the libusb version
+-endif
+-
+ cclasses := $(notdir $(wildcard $(top_srcdir)/cpp/src/command_classes/*.cpp))
+ vclasses := $(notdir $(wildcard $(top_srcdir)/cpp/src/value_classes/*.cpp))
+ pform := $(notdir $(wildcard $(top_srcdir)/cpp/src/platform/*.cpp)) \
+@@ -111,7 +94,6 @@ printversion:
+ 
+ 
+ -include $(patsubst %.cpp,$(DEPDIR)/%.d,$(tinyxml))
+--include $(patsubst %.c,$(DEPDIR)/%.d,$(hidapi))
+ -include $(patsubst %.cpp,$(DEPDIR)/%.d,$(cclasses))
+ -include $(patsubst %.cpp,$(DEPDIR)/%.d,$(vclasses))
+ -include $(patsubst %.cpp,$(DEPDIR)/%.d,$(pform))
+@@ -131,7 +113,6 @@ $(top_srcdir)/cpp/src/vers.cpp:
+ #$(OBJDIR)/vers.o:	$(top_builddir)/vers.cpp
+ 
+ $(LIBDIR)/libopenzwave.a:	$(patsubst %.cpp,$(OBJDIR)/%.o,$(tinyxml)) \
+-			$(patsubst %.c,$(OBJDIR)/%.o,$(hidapi)) \
+ 			$(patsubst %.c,$(OBJDIR)/%.o,$(aes)) \
+ 			$(patsubst %.cpp,$(OBJDIR)/%.o,$(cclasses)) \
+ 			$(patsubst %.cpp,$(OBJDIR)/%.o,$(vclasses)) \
+@@ -143,7 +124,6 @@ $(LIBDIR)/libopenzwave.a:	$(patsubst %.c
+ 	@$(RANLIB) $@
+ 
+ $(LIBDIR)/$(SHARED_LIB_NAME):	$(patsubst %.cpp,$(OBJDIR)/%.o,$(tinyxml)) \
+-			$(patsubst %.c,$(OBJDIR)/%.o,$(hidapi)) \
+ 			$(patsubst %.c,$(OBJDIR)/%.o,$(aes)) \
+ 			$(patsubst %.cpp,$(OBJDIR)/%.o,$(cclasses)) \
+ 			$(patsubst %.cpp,$(OBJDIR)/%.o,$(vclasses)) \
diff --git a/utils/openzwave/patches/902_no-udev.patch b/utils/openzwave/patches/902_no-udev.patch
new file mode 100644
index 00000000..c9176d7d
--- /dev/null
+++ b/utils/openzwave/patches/902_no-udev.patch
@@ -0,0 +1,24 @@
+--- a/cpp/src/platform/unix/SerialControllerImpl.cpp
++++ b/cpp/src/platform/unix/SerialControllerImpl.cpp
+@@ -34,10 +34,6 @@
+ #include "SerialControllerImpl.h"
+ #include "platform/Log.h"
+ 
+-#ifdef __linux__
+-#include <libudev.h>
+-#endif
+-
+ using namespace OpenZWave;
+ 
+ //-----------------------------------------------------------------------------
+--- a/cpp/build/Makefile
++++ b/cpp/build/Makefile
+@@ -59,7 +59,7 @@ endif
+ 
+ else
+ LDFLAGS += -shared -Wl,-soname,libopenzwave.so.$(VERSION)
+-LIBS 	+= -ludev
++LIBS 	+=
+ endif
+ CFLAGS  += $(CPPFLAGS)
+ 
diff --git a/utils/openzwave/patches/904-fix-lib-include-path.patch b/utils/openzwave/patches/904-fix-lib-include-path.patch
new file mode 100644
index 00000000..d0c7c39e
--- /dev/null
+++ b/utils/openzwave/patches/904-fix-lib-include-path.patch
@@ -0,0 +1,15 @@
+diff --git a/cpp/build/Makefile b/cpp/build/Makefile
+index 666472d..41dc58c 100644
+--- a/cpp/build/Makefile
++++ b/cpp/build/Makefile
+@@ -139,8 +139,8 @@ $(top_builddir)/libopenzwave.pc: $(top_srcdir)/cpp/build/libopenzwave.pc.in $(PK
+ 	@$(SED) \
+ 		-e 's|[@]prefix@|$(PREFIX)|g' \
+ 		-e 's|[@]exec_prefix@|$(PREFIX)/bin|g' \
+-		-e 's|[@]libdir@|$(instlibdir)|g' \
+-		-e 's|[@]includedir@|$(PREFIX)/include/openzwave/|g' \
++		-e 's|[@]libdir@|$${prefix}/lib|g' \
++		-e 's|[@]includedir@|$${prefix}/include/openzwave/|g' \
+                 -e 's|[@]sysconfdir@|/etc/openzwave/|g' \
+                 -e 's|[@]gitversion@|$(GITVERSION)|g' \
+                 -e 's|[@]docdir@|$(docdir)/|g' \
-- 
2.17.1

